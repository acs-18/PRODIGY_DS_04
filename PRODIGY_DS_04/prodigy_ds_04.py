# -*- coding: utf-8 -*-
"""PRODIGY_DS_04.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1LE3PQjqDR85KoF3c_fGeVG1BkXjQsFSK
"""

import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt
from textblob import TextBlob
import nltk

col_names = ['ID', 'Entity', 'Sentiment', 'Tweet']
data = pd.read_csv('twitter_training.csv', names=col_names)

data.head()

data.columns

data.shape

data.describe()

data.isna().sum()

data.dropna(inplace=True)

data.isna().sum()

data.duplicated().sum()

sentiment_count = data['Sentiment'].value_counts()
sentiment_count

# Defining a function to handle non-string values
def analyze_sentiment(text):
    if isinstance(text, str):
        return TextBlob(text).sentiment.polarity
    else:
        return 0.0

# Performing sentiment analysis and categorizing sentiment
data['Polarity'] = data['Tweet'].apply(analyze_sentiment)
data['Sentiment_Label'] = data['Polarity'].apply(lambda x: 'Positive' if x > 0 else 'Negative' if x < 0 else 'Neutral')

# Countplot to see how different sentiment are present
plt.figure(figsize=(6, 3))
sentiment_count.plot(kind='bar', color=['blue', 'yellow', 'black', 'green'])
plt.title('Sentiment Distribution')
plt.xlabel('Sentiment')
plt.ylabel('Number of Tweets')
plt.xticks(rotation=0)
plt.show()

brand_data = data[data['Entity'].str.contains('Microsoft', case=False)]
brand_sentiment_counts = brand_data['Sentiment'].value_counts()
brand_sentiment_counts

plt.figure(figsize=(6, 6))
plt.pie(brand_sentiment_counts, labels=brand_sentiment_counts.index, autopct='%1.1f%%', startangle=140)
plt.title('Sentiment Distribution for Microsoft')
plt.show()

# Barplot to see different sentiment composition for different topics
sentiment_by_topic = data.groupby(['Entity', 'Sentiment_Label']).size().unstack(fill_value=0)
sentiment_by_topic.plot(kind='bar', stacked=True)

# Printing most positive and most negtive tweet
most_positive_tweet = data[data['Polarity'] == data['Polarity'].max()]['Tweet'].values[0]
most_negative_tweet = data[data['Polarity'] == data['Polarity'].min()]['Tweet'].values[0]
print('Most Positive Tweet:')
print(most_positive_tweet)
print('\nMost Negative Tweet:')
print(most_negative_tweet)

# Barplot to see polarity of sentiments for different topics
average_polarity_by_topic = data.groupby('Entity')['Polarity'].mean()
average_polarity_by_topic.plot(kind='bar')